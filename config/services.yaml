# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    tmdb.api.key: '%env(TMDB_API_KEY)%'
    tmdb.api.url: https://api.themoviedb.org
    # image width can be change in this url : w400 means width 400 px
    tmdb.images.url: https://image.tmdb.org/t/p/w400


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\MovieGame\Setup\Infrastructure\Api\Tmdb\TheMovieDbApi:
        arguments: 
            $apiPhotoBaseUri: '%tmdb.images.url%'

    app.question.doctrine.repository:
        class: App\MovieGame\Setup\Infrastructure\Storage\Doctrine\DoctrineQuestionRepository

    app.question.predis.repository:
        class: App\MovieGame\Setup\Infrastructure\Storage\Redis\PredisQuestionRepository

    app.game.doctrine.repository:
        class: App\MovieGame\Play\Infrastructure\Storage\Doctrine\DoctrineGameRepository

    app.game.predis.repository:
        class: App\MovieGame\Play\Infrastructure\Storage\Redis\PredisGameRepository

    #Â Question game setup as Redis storage
    # Could be changed easily here by replacing .predis. by .doctrine.
    App\MovieGame\Setup\Domain\Question\QuestionRepositoryInterface: '@app.question.predis.repository'
    App\MovieGame\Play\Domain\Game\GameRepositoryInterface: '@app.game.predis.repository'

    # useful only for PredisQuestionRepository and PredisGameRepository
    Predis\Client:
        class: \Predis\Client
        arguments:
            - host: '%env(REDIS_HOST)%'
              port: '%env(int:REDIS_PORT)%'
              password: '%env(REDIS_PASSWORD)%'
