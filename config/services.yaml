# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    tmdb.api.key: '%env(TMDB_API_KEY)%'
    tmdb.api.url: https://api.themoviedb.org
    tmdb.images.url: https://image.tmdb.org/t/p/
    # tmdb.actor.popularity.min: 5
    # tmdb.actor.job.title: 'Acting'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.doctrine.question.repository:
        class: App\MovieGame\Setup\Infrastructure\Storage\Doctrine\DoctrineQuestionRepository

    App\MovieGame\Setup\Domain\Question\QuestionService:
        arguments: 
            - '%kernel.environment%'
            - '@app.doctrine.question.repository'

    # the ``App\Util\Rot13Transformer`` service will be injected when
    # an ``App\Util\TransformerInterface`` type-hint is detected
    # App\MovieGame\Setup\Domain\Question\QuestionRepositoryInterface: '@app.doctrine.question.repository'
